###################################################
# DAN 2.2 Setting up automatic deploy when pushing code
####### #####   ############  ##################
#
# ref doc: https://docs.github.com/en/actions/about-github-actions/understanding-github-actions
#
# GOOD DOCS
# Github Actions 'on' event types: https://docs.github.com/en/actions/reference/events-that-trigger-workflows
#   same doc? https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/events-that-trigger-workflows
# Github Container Registry: https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-container-registry
#     sheesh how many registries do i need - ECR, DockerHub, Github Container Registry
###################################################


###################################################
name: 5 Build-Push-Run Image

on: 
  workflow_dispatch:
# DAN 2.4.539pm: commenting out just so i can manually run while i test
#  push:
#    branches: [ main ]
#  pull_request:
#    branches: [ main ]

jobs:
  buildDahImage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: 1 Starting the Build'n'Push Process -------------------------
        run: echo "Starting up Checkout and the process in the ${{ github.event.inputs.environment }} env"


#       run docker build -t aqua-server-1 ../aqua-server-go --tag my-aqua-server-tag:$(date +%s) # this also works, but just creates another image which i dont need
      - name: 2 Build the Docker Image -------------------------
        run: |
          docker build -t aqua-server-1 ../aqua-server-go
          ls -al
          pwd


      - name: 3 Authenticate GHA with AWS -------------------------
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1


#  DANTODO 2.6: 
#    - 1 i need to remove the hardcoded values like region and in the tag, and replace with variables
#            which works fine if the vars have whitespaces on each side; but in strings i dont know the syntax yet
#    - DONE - 2 then i need to remove the terraform resource to start up the ECS container because that isnt
#      really infrastructure, 
#    - 3 and instead have GHA start the container
#    - 4 i need to check why the size that ECR shows the image being 100mb is so much smaller than locally 400mb (compressed?)
#    - 5 get rid of the sleep value below and replace with an if conditional or needs or something
#    - 6 fix this password warning
#         WARNING! Your password will be stored unencrypted in /home/runner/.docker/config.json.
#         Configure a credential helper to remove this warning. See
#         https://docs.docker.com/engine/reference/commandline/login/#credentials-store
#
# ðŸ”Ž FYI only: AWS ENV Variables: https://docs.aws.amazon.com/sdkref/latest/guide/settings-reference.html#EVarSettings

      - name: 3a. Login to ECR -------------------------
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin 535002851677.dkr.ecr.us-east-1.amazonaws.com
          echo --------- completed ECR login ----------------


      - name: 4 Tag the Image (never been sure why) and then list the images that exist -------------------------
        run: |
          docker images
          docker tag aqua-server-1:latest 535002851677.dkr.ecr.us-east-1.amazonaws.com/aqua/aqua-ecr-repo-name:latest
          sleep 8
          docker images
          docker ps



      - name: 5 Push the Image to ECR -------------------------
        run: |
          echo dwc region is ${{ env.AWS_REGION }} PERIOD
          echo dwc key is ${{ secrets.AWS_ACCESS_KEY_ID }} PERIOD
          echo dwc ACcouNT is ${{ env.AWS_ACCOUNT_ID }} PERIOD
          echo --- DOCKER IMAGES before PUSH ---
          docker images
          echo -------------------- END --------------------------
          docker push 535002851677.dkr.ecr.us-east-1.amazonaws.com/aqua/aqua-ecr-repo-name:latest
          
      - name: 6 Writing out some info re ECR, ECS, Container, --task
        run: |
          echo WWWWWWWWWWWW ECS List of Clusters WWWWWWWWWWWW
          aws ecs list-clusters
          echo XXXXXXXXXXXXX ECS Describe Clusters XXXXXXXXXXXXX
          aws ecs describe-clusters
          echo TTTTTTTTTT ECS Container Info for Aqua - none bc i dont have EC2 runnin TTTTTTTTTT
          aws ecs list-container-instances --cluster aqua-ecs-cluster-name
          echo "+++++++++ ðŸ’™ðŸ’™ ECS Task Definitions (better not be empty) +++++++++"
          aws ecs list-task-definitions
          echo "OOOOOOOOOOO ECS List Services (once its running there should be sumpin here) OOOOOOOOOOO"
          aws ecs list-services --cluster aqua-ecs-cluster-name
          echo "ðŸŸ§ðŸŸ§ðŸŸ§ðŸŸ§ ecs list-tasks --cluster aqua-ecs-cluster-name << List Tasks (should be empty since i have a Service) ðŸŸ§ðŸŸ§ðŸŸ§ðŸŸ§"
          aws ecs list-tasks --cluster aqua-ecs-cluster-name


# # ðŸ’„ðŸ’„ðŸ’„ðŸ’„ðŸ’„ðŸ’„ðŸ’„ðŸ’„ðŸ’„ðŸ’„ðŸ’„ðŸ’„ðŸ’„ðŸ’„ðŸ’„ðŸ’„ðŸ’„ðŸ’„ðŸ’„ðŸ’„ 
# # ðŸ’„ðŸ’„ðŸ’„ðŸ’„ðŸ’„ DANHERE 2.6.25 11am: trying to run the image from GHA
#       - name: 7 Run the Image -------------------------
#         run: |
#           aws ecs execute-command \
#           --region us-east-1 \
#           --cluster aqua-ecs-cluster-name \
#           --task ECS_TASK_ID \
#           --container aqua-server-da-container \
#           --command "/bin/bash" \
#           --interactive


# 2.6 11am Reference from Google AI
          # aws ecs execute-command \
          # --region us-east-1 \
          # --cluster ECS_CLUSTER_NAME \
          # --task ECS_TASK_ID \
          # --container CONTAINER_NAME \
          # --command "/bin/bash" \
          # --interactive

          
# ðŸŸ§ðŸŸ§ðŸŸ§ðŸŸ§ðŸŸ§ðŸŸ§ðŸŸ§ðŸŸ§ðŸŸ§ðŸŸ§
#  DAN 2.5.25 4pm: the below MAY / MAY NOT be needed.  it is how to actually config creds for aws
#      but i dont need to config them; i just need to pass them, right?
#
# on:
#   push:
#     branches:
#       - main
#
# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v2
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}
#
#       - name: Get AWS secrets
#         uses: aws-actions/aws-secretsmanager-get-secrets@v1
#         with:
#           secret-ids: |
#             YOUR_KEY
#           parse-json-secrets: true
#
#       - name: Print all Values
# ðŸŸ§ðŸŸ§ðŸŸ§ðŸŸ§ðŸŸ§ðŸŸ§ðŸŸ§ðŸŸ§ðŸŸ§ðŸŸ§


# DANH 2.3 915pm: from NANA this may help me automate the build of the docker image
#      https://youtu.be/R8_veQiYBjI?si=k3d_ArZs9gH0HKVn&t=1119
#  
#   steps:
#     - uses: actions/checkout@v2
#
#     - name: do the docker image build
#       uses: docker/build-push-action@v2
#       # or maybe actions/somthin-for-docker-buildin (dwc)
#
#     - name: push the docker image to ECR
#       uses: aws-actions/amazon-ecr-login@v2
#